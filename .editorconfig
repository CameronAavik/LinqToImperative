root = true

[*]
insert_final_newline = true
indent_style = space
indent_size = 4
trim_trailing_whitespace = true
charset = utf-8
end_of_line = lf


[*.{csproj,xml,ruleset,json,config,yml,yaml}]
indent_size = 2

# more info: https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-language-conventions?view=vs-2019
[*.cs]

# used with https://marketplace.visualstudio.com/items?itemName=PaulHarrington.EditorGuidelines
# documentation/comments should go to 100
# code should stop at 160 at maximum
guidelines = 100 1px dotted 8D8B8B, 160 1px dashed 8D8B8B

# Always use "this." when accessing instance fields, properties, methods, and events.
dotnet_style_qualification_for_field = true:warning
dotnet_style_qualification_for_property = true:warning
dotnet_style_qualification_for_method = true:warning
dotnet_style_qualification_for_event = true:warning

# Prefer int over Int32 everywhere. Similarly for all other inbuilt types.
dotnet_style_predefined_type_for_locals_parameters_members = true:warning
dotnet_style_predefined_type_for_member_access = true:warning

# Accessibility modifier must always be specified, modifiers must appear in correct order, and fields must be readonly if they can be.
dotnet_style_require_accessibility_modifiers = always:warning
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:warning
dotnet_style_readonly_field = true:warning

# Parentheses are needed for >, <, <=, >=, is, as, ==, !=. They are suggested for &&, ||, ??
dotnet_style_parentheses_in_arithmetic_binary_operators = never_if_unnecessary:suggestion
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:suggestion
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent

# Prefer shorter, newer syntax when possible.
# Conditional expressions are silent since sometimes they don't make sense such as when null checking arguments.
dotnet_style_object_initializer = true:warning
dotnet_style_collection_initializer = true:warning
dotnet_style_explicit_tuple_names = true:warning
dotnet_style_prefer_inferred_tuple_names = true:warning
dotnet_style_prefer_inferred_anonymous_type_member_names = true:warning
dotnet_style_prefer_auto_properties = true:warning
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:warning
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent
dotnet_style_prefer_compound_assignment = true:warning
dotnet_style_coalesce_expression = true:warning
dotnet_style_null_propagation = true:warning

# suggest to remove unused parameters
dotnet_code_quality_unused_parameters = all:suggestion

# use var when the type is obvious, disallow var for built-in types, and suggest disallowing var for all other scenarios
csharp_style_var_for_built_in_types = false:suggestion
csharp_style_var_when_type_is_apparent = true:warning
csharp_style_var_elsewhere = false:suggestion

# require expression bodies for operators, properties, indexers, accessors and lambdas
# disallow expression bodies for constructors and local functions
# suggest expression bodies for methods
csharp_style_expression_bodied_methods = when_on_single_line:suggestion
csharp_style_expression_bodied_constructors = false:warning
csharp_style_expression_bodied_operators = true:warning
csharp_style_expression_bodied_properties = true:warning
csharp_style_expression_bodied_indexers = true:warning
csharp_style_expression_bodied_accessors = true:warning
csharp_style_expression_bodied_lambdas = true:warning
csharp_style_expression_bodied_local_functions = false:warning

# always prefer pattern matching for casting and instance checking
csharp_style_pattern_matching_over_is_with_cast_check = true:warning
csharp_style_pattern_matching_over_as_with_null_check = true:warning

# defining the types for out params are preferred to be inlined in most cases, but there are exceptions
csharp_style_inlined_variable_declaration = true:suggestion

# prefer default over default(T)
csharp_prefer_simple_default_expression = true:warning

# always use throw expressions
csharp_style_throw_expression = true:warning

# use the coalescing operator when invoking delegates
csharp_style_conditional_delegate_call = true:warning

# uses braces everywhere
csharp_prefer_braces = true:warning

# suggest using discard variables
csharp_style_unused_value_expression_statement_preference = discard_variable:suggestion
csharp_style_unused_value_assignment_preference = discard_variable:suggestion

# use range and index operators
csharp_style_prefer_index_operator = true:warning
csharp_style_prefer_range_operator = true:warning

# use the deconstructor when possible
csharp_style_deconstructed_variable_declaration = true:warning

# use local functions instead of Func
csharp_style_pattern_local_over_anonymous_function = true:warning

# using statements stay outside the namespace
csharp_using_directive_placement = outside_namespace:warning

# if possible, local functions that can be made static should be made static
csharp_prefer_static_local_function = true:warning

# use the simple using statement without braces
csharp_prefer_simple_using_statement = true:warning

# use switch expressions when possible
csharp_style_prefer_switch_expression = true:warning

# using directives for System namespaces go first, and there must be no spaces between using directives
dotnet_sort_system_directives_first = true
dotnet_separate_import_directive_groups = false

# require newlines for all scenarios where it makes sense
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# indent switch contents, labels, and block contents
# goto labels should be indented one less than the current indent
# braces should not be indented
csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = one_less_than_current
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents_when_block = true

# Spacing rules. See https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-formatting-conventions?view=vs-2019#spacing-options
csharp_space_after_cast = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_parentheses = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_around_binary_operators = before_and_after
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_after_comma = true
csharp_space_before_comma = false
csharp_space_after_dot = false
csharp_space_before_dot = false
csharp_space_after_semicolon_in_for_statement = true
csharp_space_before_semicolon_in_for_statement = false
csharp_space_around_declaration_statements = false
csharp_space_before_open_square_brackets = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_square_brackets = false

# disallow multiple statements on the one line, but allow blocks to be on the one line (e.g. { get; set; })
csharp_preserve_single_line_statements = false
csharp_preserve_single_line_blocks = true
